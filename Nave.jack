class Nave {
    static Array bulletX, bulletY;
    static int bulletCount, maxBullets;

    function void init() {
        let maxBullets = 10;
        let bulletCount = 0;
        let bulletX = Array.new(maxBullets);
        let bulletY = Array.new(maxBullets);
        return;
    }

    function void drawShip(int x, int y) {
        do Screen.setColor(true);
        do Screen.drawRectangle(x + 7, y, x + 13, y + 10);
        do Screen.drawRectangle(x, y + 4, x + 5, y + 10);
        do Screen.drawRectangle(x + 15, y + 4, x + 20, y + 10);
        do Screen.drawRectangle(x + 10, y - 5, x + 10, y);
        return;
    }

    function void fire(int x, int y) {
        if (bulletCount < maxBullets) {
            let bulletX[bulletCount] = x;
            let bulletY[bulletCount] = y - 30;
            let bulletCount = bulletCount + 1;
        }
        return;
    }

    function void updateBullets() {
        var int i;
        let i = 0;

        while (i < bulletCount) {
            do Screen.setColor(false);
            do Screen.drawRectangle(bulletX[i], bulletY[i], bulletX[i], bulletY[i] + 2);
            
            let bulletY[i] = bulletY[i] - 8;

            if (bulletY[i] > 0) {
                do Alien.checkHit(bulletX[i], bulletY[i]);

                if (Alien.wasHit()) {
                    let bulletCount = bulletCount - 1;
                    let bulletX[i] = bulletX[bulletCount];
                    let bulletY[i] = bulletY[bulletCount];
                    do Alien.resetHitFlag();
                } else {
                    // Draw bullet at new position
                    do Screen.setColor(true);
                    do Screen.drawRectangle(bulletX[i], bulletY[i], bulletX[i], bulletY[i] + 2);
                    let i = i + 1;
                }
            } else {
                let bulletCount = bulletCount - 1;
                let bulletX[i] = bulletX[bulletCount];
                let bulletY[i] = bulletY[bulletCount];
            }
        }
        return;
    }
}