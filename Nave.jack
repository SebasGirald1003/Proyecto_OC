class Nave {
    static Array bulletX, bulletY;
    static int bulletCount;
    static int maxBullets;

    function void run() {
        var int x, y;
        var char key;
        var boolean exit;

        let maxBullets = 5;
        let bulletCount = 0;
        let bulletX = Array.new(maxBullets);
        let bulletY = Array.new(maxBullets);

        let x = 100;
        let y = 200;
        let exit = false;

        do Screen.clearScreen();
        do Screen.setColor(true);

        while (~exit) {
            
            do Nave.drawShip(x, y);
            
            let key = Keyboard.keyPressed();
            
            if (key = 130) { if (x > 0) { let x = x - 5; } }
            
            if (key = 132) { if (x < 490) { let x = x + 5; } }
            
            if (key = 32) { do Nave.fireBullet(x, y); }
            
           
            if (key = 140) { let exit = true; }
            
           
            do Nave.updateBullets();
            
            do Sys.wait(50);
            do Screen.clearScreen();
        }
        return;
    }

    function void drawShip(int x, int y) {
        do Screen.drawRectangle(x + 7, y, x + 13, y + 10);
        do Screen.drawRectangle(x, y + 4, x + 5, y + 10);
        do Screen.drawRectangle(x + 15, y + 4, x + 20, y + 10);
        do Screen.drawRectangle(x + 10, y - 5, x + 10, y);
        return;
    }

    function void fireBullet(int shipX, int shipY) {
        if (bulletCount < maxBullets) {
            let bulletX[bulletCount] = shipX + 10;
            let bulletY[bulletCount] = shipY - 5;
            let bulletCount = bulletCount + 1;
        }
        return;
    }

    function void updateBullets() {
        var int i;
        let i = 0;
        
        while (i < bulletCount) {
          
            let bulletY[i] = bulletY[i] - 8;
            
           
            if (bulletY[i] > 0) {
                do Screen.drawRectangle(bulletX[i], bulletY[i], bulletX[i], bulletY[i] + 2);
                let i = i + 1;
            }
            else {
               
                let bulletCount = bulletCount - 1;
                let bulletX[i] = bulletX[bulletCount];
                let bulletY[i] = bulletY[bulletCount];
            }
        }
        return;
    }
}